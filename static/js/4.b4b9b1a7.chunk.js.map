{"version":3,"sources":["components/user/User.module.css","components/common/pagination/Pagination.module.css","components/common/buttons/ButtonDisabled.tsx","components/user/User.tsx","components/common/pagination/Pagination.tsx","components/users/Users.tsx","../node_modules/reselect/es/index.js","redux/usersSelectors.ts","components/users/UsersContainer.tsx"],"names":["module","exports","DisabledButton","props","buttonName","className","s","button","disabled","User","user","follow","unfollow","followingProgress","to","id","alt","src","photos","small","some","followed","Button","onClickHandler","name","status","Pagination","totalCount","count","currentPage","requestUsers","pagesCount","Math","ceil","numbersOfPages","pagesInBlock","i","push","currentPagesBlock","useMemo","floor","prev","useCallback","next","length","users_page","pages","style","margin","onClick","display","marginRight","slice","map","p","padding","selectedPage","marginLeft","Users","users","loading","justifyContent","alignItems","Preloader","u","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsers","state","usersPage","filter","getCount","getTotalCount","getCurrentPage","getLoading","getFollowingProgress","UsersContainer","this","React","Component","connect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,aAAe,iCAAiC,MAAQ,4B,sKCMzGC,EAA4C,SAACC,GAAW,IAE7DC,EACAD,EADAC,WAGJ,OACI,8BACI,yBAAQC,UAAWC,IAAEC,OAAQC,UAAU,EAAvC,cAA+CJ,EAA/C,UCACK,EAA4B,SAACN,GAAW,IAE7CO,EAIAP,EAJAO,KACAC,EAGAR,EAHAQ,OACAC,EAEAT,EAFAS,SACAC,EACAV,EADAU,kBAUJ,OACI,sBAAKR,UAAWC,IAAEI,KAAlB,UACI,8BACI,cAAC,IAAD,CAASI,GAAI,YAAcJ,EAAKK,GAAhC,SACI,qBAAKC,IAAK,GAAIC,IAAKP,EAAKQ,OAAOC,YAGvC,8BACKN,EAAkBO,MAAK,SAAAL,GAAE,OAAIA,IAAOL,EAAKK,MACtC,cAAC,EAAD,CACIX,WAAYM,EAAKW,SAAW,WAAa,WAE7C,cAACC,EAAA,EAAD,CACIC,eAAgBb,EAAKW,SAjBnB,WAClBT,EAASF,EAAKK,KAJK,WACnBJ,EAAOD,EAAKK,KAoBIX,WAAYM,EAAKW,SAAW,WAAa,aAIrD,8BACKX,EAAKc,OAEV,8BACKd,EAAKe,a,0BCzCTC,EAAa,SAACvB,GAYvB,IAZuD,IAEnDwB,EAIAxB,EAJAwB,WACAC,EAGAzB,EAHAyB,MACAC,EAEA1B,EAFA0B,YACAC,EACA3B,EADA2B,aAGEC,EAAaC,KAAKC,KAAKN,EAAaC,GACpCM,EAAiB,GACjBC,EAAe,GAEZC,EAAI,EAAGA,GAAKL,EAAYK,IAC7BF,EAAeG,KAAKD,GAGxB,IAAME,EAAoBC,mBAAQ,kBAAOP,KAAKQ,OAAOX,EAAc,GAAKM,GAAgBA,IACpF,CAACN,EAAaM,IAEZM,EAAOC,uBAAY,WACjBb,EAAcM,GACdL,EAAaQ,EAAoBH,EAAe,EAAGP,KAExD,CAACC,EAAaM,EAAcL,EAAcQ,EAAmBV,IAC1De,EAAOD,uBAAY,WACjBJ,EAAoBH,EAAeD,EAAeU,QAClDd,EAAaQ,EAAoBH,EAAe,EAAGP,KAExD,CAACC,EAAaM,EAAcJ,EAAYD,EAAcQ,EAAmBV,IAS5E,OAAQ,qBAAKvB,UAAWC,IAAEuC,WAAlB,SACA,sBAAKxC,UAAWC,IAAEwC,MAAlB,UAEI,sBAAKC,MAAO,CAACC,OAAQ,QAASC,QAVxB,WACdnB,EAAa,EAAGF,IASR,cAAoD,gBAApD,OAEA,sBAAKmB,MAAO,CAACG,QAAS,OAAQF,OAAQ,QAAtC,UACKnB,EAAcM,GACf,sBAAKY,MAAO,CAACI,YAAa,QAASF,QAASR,EAA5C,cAAoD,MAApD,OAECP,EAAekB,MAAMd,EAAmBA,EAAoBH,GAAckB,KAAI,SAAAC,GAC3E,OAAO,uBACHP,MAAO,CAACQ,QAAS,gBAEjBN,QAAS,kBAAMnB,EAAawB,EAAG1B,IAC/BvB,UAAWwB,IAAgByB,EAAIhD,IAAEkD,aAAe,GAJ7C,UAKVF,EALU,MAEEA,MAMZhB,EAAoBH,EAAeD,EAAeU,QACnD,sBAAKG,MAAO,CAACU,WAAY,QAASR,QAASN,EAA3C,cAAmD,MAAnD,UAGJ,sBAAKI,MAAO,CAACC,OAAQ,QAASC,QA1B1B,WACZnB,EAAaC,EAAYH,IAyBjB,cAAkD,eAAlD,aCnDH8B,EAAQ,SAACvD,GAAsB,IAEpCwD,EASAxD,EATAwD,MACAhC,EAQAxB,EARAwB,WACAC,EAOAzB,EAPAyB,MACAC,EAMA1B,EANA0B,YACA+B,EAKAzD,EALAyD,QACA/C,EAIAV,EAJAU,kBACAF,EAGAR,EAHAQ,OACAC,EAEAT,EAFAS,SACAkB,EACA3B,EADA2B,aAIJ,OACI,gCACI,cAAC,EAAD,CACIH,WAAYA,EACZC,MAAOA,EACPC,YAAaA,EACbC,aAAcA,IAEjB8B,EACG,qBAAKb,MAAO,CAACG,QAAS,OAAQW,eAAgB,SAAUC,WAAY,UAApE,SACI,cAACC,EAAA,EAAD,MAEJJ,EAAMN,KAAI,SAACW,GAAD,OAAiB,cAAC,EAAD,CAEnBtD,KAAMsD,EACNrD,OAAQA,EACRC,SAAUA,EACVC,kBAAmBA,GAJdmD,EAAEjD,OAOnB,cAAC,EAAD,CACIY,WAAYA,EACZC,MAAOA,EACPC,YAAaA,EACbC,aAAcA,QCxD9B,SAASmC,EAAqBC,EAAGC,GAC/B,OAAOD,IAAMC,EAGf,SAASC,EAA2BC,EAAe5B,EAAME,GACvD,GAAa,OAATF,GAA0B,OAATE,GAAiBF,EAAKG,SAAWD,EAAKC,OACzD,OAAO,EAKT,IADA,IAAIA,EAASH,EAAKG,OACTR,EAAI,EAAGA,EAAIQ,EAAQR,IAC1B,IAAKiC,EAAc5B,EAAKL,GAAIO,EAAKP,IAC/B,OAAO,EAIX,OAAO,EAoBT,SAASkC,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,KACZ,CACF,IAAIC,EAAkBL,EAAanB,KAAI,SAAUuB,GAC/C,cAAcA,KACbE,KAAK,MACR,MAAM,IAAIC,MAAM,wGAAgHF,EAAkB,KAGpJ,OAAOL,EAiDF,IAAIQ,EA9CJ,SAA+BC,GACpC,IAAK,IAAIC,EAAOC,UAAUvC,OAAQwC,EAAiBX,MAAMS,EAAO,EAAIA,EAAO,EAAI,GAAIG,EAAO,EAAGA,EAAOH,EAAMG,IACxGD,EAAeC,EAAO,GAAKF,UAAUE,GAGvC,OAAO,WACL,IAAK,IAAIC,EAAQH,UAAUvC,OAAQ2B,EAAQE,MAAMa,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACjFhB,EAAMgB,GAASJ,UAAUI,GAG3B,IAAIC,EAAiB,EACjBC,EAAalB,EAAMmB,MACnBlB,EAAeF,EAAgBC,GAE/BoB,EAAqBV,EAAQW,WAAMC,EAAW,CAAC,WAGjD,OAFAL,IAEOC,EAAWG,MAAM,KAAMT,aAC7BW,OAAOV,IAGNW,EAAWd,GAAQ,WAIrB,IAHA,IAAIe,EAAS,GACTpD,EAAS4B,EAAa5B,OAEjBR,EAAI,EAAGA,EAAIQ,EAAQR,IAE1B4D,EAAO3D,KAAKmC,EAAapC,GAAGwD,MAAM,KAAMT,YAI1C,OAAOQ,EAAmBC,MAAM,KAAMI,MAWxC,OARAD,EAASN,WAAaA,EACtBM,EAASvB,aAAeA,EACxBuB,EAASP,eAAiB,WACxB,OAAOA,GAETO,EAASE,oBAAsB,WAC7B,OAAOT,EAAiB,GAEnBO,GAIiBG,EA9ErB,SAAwBC,GAC7B,IAAI9B,EAAgBc,UAAUvC,OAAS,QAAsBiD,IAAjBV,UAAU,GAAmBA,UAAU,GAAKlB,EAEpFmC,EAAW,KACXC,EAAa,KAEjB,OAAO,WAOL,OANKjC,EAA2BC,EAAe+B,EAAUjB,aAEvDkB,EAAaF,EAAKP,MAAM,KAAMT,YAGhCiB,EAAWjB,UACJkB,MC5BX,IAGaC,EAAWtB,GAHO,SAACuB,GAC5B,OAAOA,EAAMC,UAAU7C,SAEoC,SAACA,GAC5D,OAAOA,EAAM8C,QAAO,SAAAzC,GAAC,OAAI,QAKhB0C,EAAW,SAACH,GACrB,OAAOA,EAAMC,UAAU5E,OAEd+E,EAAgB,SAACJ,GAC1B,OAAOA,EAAMC,UAAU7E,YAEdiF,EAAiB,SAACL,GAC3B,OAAOA,EAAMC,UAAU3E,aAEdgF,EAAa,SAACN,GACvB,OAAOA,EAAMC,UAAU5C,SAEdkD,EAAuB,SAACP,GACjC,OAAOA,EAAMC,UAAU3F,mBCSrBkG,E,uKAEF,WACIC,KAAK7G,MAAM2B,aAAakF,KAAK7G,MAAM0B,YAAamF,KAAK7G,MAAMyB,S,oBAG/D,WACI,OAAQ,mCACI,cAAC,EAAD,CACI+B,MAAOqD,KAAK7G,MAAMwD,MAClBhC,WAAYqF,KAAK7G,MAAMwB,WACvBC,MAAOoF,KAAK7G,MAAMyB,MAClBC,YAAamF,KAAK7G,MAAM0B,YACxB+B,QAASoD,KAAK7G,MAAMyD,QACpB/C,kBAAmBmG,KAAK7G,MAAMU,kBAC9BF,OAAQqG,KAAK7G,MAAMQ,OACnBC,SAAUoG,KAAK7G,MAAMS,SACrBkB,aAAckF,KAAK7G,MAAM2B,qB,GAjBpBmF,IAAMC,WAqCpBC,uBAXS,SAACZ,GACrB,MAAO,CACH5C,MAAO2C,EAASC,GAChB3E,MAAO8E,EAASH,GAChB5E,WAAYgF,EAAcJ,GAC1B1E,YAAa+E,EAAeL,GAC5B3C,QAASiD,EAAWN,GACpB1F,kBAAmBiG,EAAqBP,MAK5C,CAAC5F,WAAQC,aAAUkB,kBADRqF,CACuBJ","file":"static/js/4.b4b9b1a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__PqC96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_page\":\"Pagination_users_page__2VqgH\",\"selectedPage\":\"Pagination_selectedPage__2Vb-i\",\"pages\":\"Pagination_pages__3i4Ms\"};","import React from \"react\";\r\nimport s from './Buttons.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    buttonName?: string\r\n}\r\n\r\nexport const DisabledButton: React.FC<ButtonPropsType> = (props) => {\r\n    const {\r\n        buttonName\r\n    } = props\r\n\r\n    return (\r\n        <div>\r\n            <button className={s.button} disabled={true}> {buttonName} </button>\r\n        </div>\r\n    )\r\n}","import s from './User.module.css'\r\nimport React from \"react\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {Button} from \"../common/buttons/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DisabledButton} from \"../common/buttons/ButtonDisabled\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingProgress: Array<number>\r\n}\r\n\r\nexport const User: React.FC<PropsType> = (props) => {\r\n    const {\r\n        user,\r\n        follow,\r\n        unfollow,\r\n        followingProgress\r\n    } = props\r\n\r\n    const startFollowing = () => {\r\n        follow(user.id)\r\n    }\r\n    const stopFollowing = () => {\r\n        unfollow(user.id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img alt={''} src={user.photos.small}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {followingProgress.some(id => id === user.id) ?\r\n                    <DisabledButton\r\n                        buttonName={user.followed ? 'unfollow' : 'follow'}\r\n                    /> :\r\n                    <Button\r\n                        onClickHandler={user.followed ? stopFollowing : startFollowing}\r\n                        buttonName={user.followed ? 'unfollow' : 'follow'}\r\n                    />\r\n                }\r\n            </div>\r\n            <div>\r\n                {user.name}\r\n            </div>\r\n            <div>\r\n                {user.status}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useMemo} from \"react\";\r\nimport s from './Pagination.module.css'\r\n\r\ntype PaginationPropsType = {\r\n    totalCount: number\r\n    count: number\r\n    currentPage: number\r\n    requestUsers: (currentPage: number, current: number) => void\r\n}\r\n\r\nexport const Pagination = (props: PaginationPropsType) => {\r\n    const {\r\n        totalCount,\r\n        count,\r\n        currentPage,\r\n        requestUsers\r\n    } = props\r\n\r\n    const pagesCount = Math.ceil(totalCount / count)\r\n    const numbersOfPages = []\r\n    const pagesInBlock = 10\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        numbersOfPages.push(i)\r\n    }\r\n\r\n    const currentPagesBlock = useMemo(() => (Math.floor((currentPage - 1) / pagesInBlock) * pagesInBlock),\r\n        [currentPage, pagesInBlock])\r\n\r\n    const prev = useCallback(() => {\r\n        if (currentPage > pagesInBlock) {\r\n            requestUsers(currentPagesBlock - pagesInBlock + 1, count)\r\n        }\r\n    }, [currentPage, pagesInBlock, requestUsers, currentPagesBlock, count])\r\n    const next = useCallback(() => {\r\n        if (currentPagesBlock + pagesInBlock < numbersOfPages.length) {\r\n            requestUsers(currentPagesBlock + pagesInBlock + 1, count)\r\n        }\r\n    }, [currentPage, pagesInBlock, pagesCount, requestUsers, currentPagesBlock, count])\r\n\r\n    const startPage = () => {\r\n        requestUsers(1, count)\r\n    }\r\n    const endPage = () => {\r\n        requestUsers(pagesCount, count)\r\n    }\r\n\r\n    return (<div className={s.users_page}>\r\n            <div className={s.pages}>\r\n\r\n                <div style={{margin: '10px'}} onClick={startPage}> {'<< first page'} </div>\r\n\r\n                <div style={{display: \"flex\", margin: '10px'}}>\r\n                    {currentPage > pagesInBlock &&\r\n                    <div style={{marginRight: '20px'}} onClick={prev}> {'<=='} </div>}\r\n\r\n                    {numbersOfPages.slice(currentPagesBlock, currentPagesBlock + pagesInBlock).map(p => {\r\n                        return <span\r\n                            style={{padding: ' 0 5px 0 5px'}}\r\n                            key={p}\r\n                            onClick={() => requestUsers(p, count)}\r\n                            className={currentPage === p ? s.selectedPage : ''}>\r\n                    {p} </span>\r\n                    })}\r\n\r\n                    {currentPagesBlock + pagesInBlock < numbersOfPages.length &&\r\n                    <div style={{marginLeft: '20px'}} onClick={next}> {'==>'} </div>}\r\n                </div>\r\n\r\n                <div style={{margin: '10px'}} onClick={endPage}> {'last page >>'} </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {User} from \"../user/User\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {Pagination} from \"../common/pagination/Pagination\";\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    totalCount: number\r\n    count: number\r\n    currentPage: number\r\n    loading: boolean\r\n    followingProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    requestUsers: (currentPage: number, current: number) => void\r\n}\r\n\r\nexport const Users = (props: PropsType) => {\r\n    const {\r\n        users,\r\n        totalCount,\r\n        count,\r\n        currentPage,\r\n        loading,\r\n        followingProgress,\r\n        follow,\r\n        unfollow,\r\n        requestUsers\r\n    } = props\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Pagination\r\n                totalCount={totalCount}\r\n                count={count}\r\n                currentPage={currentPage}\r\n                requestUsers={requestUsers}\r\n            />\r\n            {loading ?\r\n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                    <Preloader/>\r\n                </div> :\r\n                users.map((u: UserType) => <User\r\n                        key={u.id}\r\n                        user={u}\r\n                        follow={follow}\r\n                        unfollow={unfollow}\r\n                        followingProgress={followingProgress}\r\n                    />\r\n                )}\r\n            <Pagination\r\n                totalCount={totalCount}\r\n                count={count}\r\n                currentPage={currentPage}\r\n                requestUsers={requestUsers}\r\n            />\r\n        </div>\r\n    )\r\n}","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {AppRootStateType} from \"./Redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\n//////////////////////////////////// example reselect ////////////////////////////  // если в селекторе используется логика которая в любом случае\r\n                                                                                    // возвращает измененные данные (напримет метод filter),\r\nconst getUsersSimpleSelector = (state: AppRootStateType) => {                       // необходимо создавать другой селектор что бы предотвратить\r\n    return state.usersPage.users                                                    // постоянную перерисовку. (библиотека 'reselect')\r\n}                                                                                   // Селектор (getUsers) принимает в зависимость\r\nexport const getUsers = createSelector(getUsersSimpleSelector, (users) => { // (getUsersSimpleSelector) который достаёт всех\r\n    return users.filter(u => true)                                                  // users. Селектор getUsers отфильтровывает всех юзеров и\r\n})                                                                                  // запоминает этот отфильтрованный массив юзеров. Когда в следующий\r\n                                                                                    // раз вызовется getUsers он посмотрит, если приходящие юзеры те же,\r\n//////////////////////////////////////////////////////////////////////////////////  // он не станет снова фильтровать, а возьмёт массив который ранее\r\n                                                                                    // запомнил, и перересовки не произойдёт.\r\nexport const getCount = (state: AppRootStateType) => {\r\n    return state.usersPage.count\r\n}\r\nexport const getTotalCount = (state: AppRootStateType) => {\r\n    return state.usersPage.totalCount\r\n}\r\nexport const getCurrentPage = (state: AppRootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getLoading = (state: AppRootStateType) => {\r\n    return state.usersPage.loading\r\n}\r\nexport const getFollowingProgress = (state: AppRootStateType) => {\r\n    return state.usersPage.followingProgress\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/usersReducer\";\r\nimport {AppRootStateType} from \"../../redux/Redux-store\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {\r\n    getCount,\r\n    getCurrentPage,\r\n    getFollowingProgress,\r\n    getLoading,\r\n    getTotalCount,\r\n    getUsers\r\n} from \"../../redux/usersSelectors\";\r\n\r\ntype UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n    count: number,\r\n    totalCount: number,\r\n    currentPage: number,\r\n    loading: boolean,\r\n    followingProgress: Array<number>\r\n}\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    requestUsers: (currentPage: number, count: number) => void\r\n}\r\n\r\n/////////////////////////////////////////////////////// Container class Api component ////////////////////////////\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount(): void {\r\n        this.props.requestUsers(this.props.currentPage, this.props.count)\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n                    <Users\r\n                        users={this.props.users}\r\n                        totalCount={this.props.totalCount}\r\n                        count={this.props.count}\r\n                        currentPage={this.props.currentPage}\r\n                        loading={this.props.loading}\r\n                        followingProgress={this.props.followingProgress}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        requestUsers={this.props.requestUsers}\r\n                    />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////// Container component ////////////////////////////////////\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {     //     using selectors\r\n    return {                                                                  //             |\r\n        users: getUsers(state),                                               //             |\r\n        count: getCount(state),                                               //     <<<-----|\r\n        totalCount: getTotalCount(state),                                     //\r\n        currentPage: getCurrentPage(state),                                   //\r\n        loading: getLoading(state),                                           //\r\n        followingProgress: getFollowingProgress(state)                        //\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, requestUsers})(UsersContainer)"],"sourceRoot":""}